#include <msp430.h>
#include "libTimer.h"
#include "led.h"
#include "buzzer.h"
#include "lcdutils.h"
#include "lcddraw.h"
#include "stateMachineBuzz.h"
#include "stateMachines.h"
#include "switches.h"

char redrawScreen = 1;

int main(void) {
  configureClocks();		/* setup master oscillator, CPU & peripheral clocks */
  led_init();
  enableWDTInterrupts();	/* enable periodic interrupt */
  switch_init();
  lcd_init();
  
  for(;;) { 
    while (!redrawScreen) { /**< Pause CPU if screen doesn't need updating */
      P1OUT &= ~LED_GREEN;    /**< Green led off witHo CPU */
      //or_sr(0x10);	      /**< CPU OFF */
    }
    P1OUT |= LED_GREEN;       /**< Green led on when CPU on */
    redrawScreen = 0;
    buttonBuzzer();
    clearScreen(COLOR_WHITE);
    // drawTriangle(Right, Horizontal, COLOR_BLUE);
    // drawRectangle(1, Horizontal, rColor);
  }
}

/** Watchdog timer interrupt handler. 15 interrupts/sec */
void wdt_c_handler()
{
  static char blink_count = 0;
  if (++blink_count == 50 && (i <= 17 )) {
    buzzer_play_sound();
    i++;
    blink_count = 0;
  }
  if(i<17 && i>0){
    dim();
  }
  
  static short count = 0;
  P1OUT |= LED_GREEN;		      /**< Green LED on when cpu on */
  count ++;
  if (count == 15) {
    if (switch_state_down){
      redrawScreen = 1;
    }
    count = 0;
  } 
  P1OUT &= ~LED_GREEN;		    /**< Green LED off when cpu off */
}
